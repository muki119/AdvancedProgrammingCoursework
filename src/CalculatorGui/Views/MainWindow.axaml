<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Class="CalculatorGui.Views.MainWindow"
        Title="Maths Expression Evaluator"
        x:Name="mainWindow"
        Width="1000" Height="800"
        MinWidth="600" MinHeight="500">

    <Window.Resources>
    <!-- defining elements of the windows colours-->
    
        <!-- dark mode colours -->
        <SolidColorBrush x:Key="DarkBackground">#191919</SolidColorBrush>
        <SolidColorBrush x:Key="DarkSurface">#2a272a</SolidColorBrush>
        <SolidColorBrush x:Key="DarkBorder">#4b4a54</SolidColorBrush>
        <SolidColorBrush x:Key="DarkText">#c9d1d9</SolidColorBrush>
        <SolidColorBrush x:Key="DarkTextSecondary">#8b949e</SolidColorBrush>
        <SolidColorBrush x:Key="DarkAccent">#a3cfcd</SolidColorBrush>
        <SolidColorBrush x:Key="DarkError">#EC1915</SolidColorBrush>
        <SolidColorBrush x:Key="DarkButtonPrimary">#238636</SolidColorBrush>
        <SolidColorBrush x:Key="DarkButtonPrimaryHover">#2ea043</SolidColorBrush>
        <SolidColorBrush x:Key="DarkButtonSecondary">#21262d</SolidColorBrush>
        <SolidColorBrush x:Key="DarkButtonSecondaryHover">#30363d</SolidColorBrush>
        <SolidColorBrush x:Key="DarkErrorBackground">#1c1e26</SolidColorBrush>

        <!-- light mode colours -->
        <SolidColorBrush x:Key="LightBackground">#ffffff</SolidColorBrush>
        <SolidColorBrush x:Key="LightSurface">#dadde2</SolidColorBrush>
        <SolidColorBrush x:Key="LightBorder">#b1bdc5</SolidColorBrush>
        <SolidColorBrush x:Key="LightText">#628281</SolidColorBrush>
        <SolidColorBrush x:Key="LightTextSecondary">#43655a</SolidColorBrush>
        <SolidColorBrush x:Key="LightAccent">#324b4a</SolidColorBrush>
        <SolidColorBrush x:Key="LightError">#EC1915</SolidColorBrush>
        <SolidColorBrush x:Key="LightButtonPrimary">#238636</SolidColorBrush>
        <SolidColorBrush x:Key="LightButtonPrimaryHover">#2ea043</SolidColorBrush>
        <SolidColorBrush x:Key="LightButtonSecondary">#eaeef2</SolidColorBrush>
        <SolidColorBrush x:Key="LightButtonSecondaryHover">#d0d7de</SolidColorBrush>
        <SolidColorBrush x:Key="LightErrorBackground">#fff1f0</SolidColorBrush>

    </Window.Resources>


    <Window.Styles>
    <!-- styling based on the current theme -->

        <Style Selector="Window">
            <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
        </Style>

        <Style Selector="Menu">
            <Setter Property="Background" Value="{DynamicResource SurfaceBackground}"/>
        </Style>

        <Style Selector="MenuItem">
            <Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
            <Setter Property="Background" Value="{DynamicResource SurfaceBackground}"/>
            <Setter Property="Padding" Value="12,8"/>
        </Style>

        <Style Selector="MenuItem:pointerover /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{DynamicResource BorderColor}"/>
        </Style>

        <Style Selector="MenuItem:selected /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{DynamicResource BorderColor}"/>
        </Style>

        <Style Selector="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonPrimary}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style Selector="Button:pointerover">
            <Setter Property="Background" Value="{DynamicResource ButtonPrimaryHover}"/>
        </Style>

        <Style Selector="Button:pressed">
            <Setter Property="Background" Value="{DynamicResource ButtonPrimaryHover}"/>
        </Style>

        <Style Selector="Button.clear">
            <Setter Property="Background" Value="{DynamicResource ButtonSecondary}"/>
        </Style>
        
        <Style Selector="Button.clear:pointerover">
            <Setter Property="Background" Value="{DynamicResource ButtonSecondaryHover}"/>
        </Style>

        <Style Selector="Button.theme">
            <Setter Property="Background" Value="{DynamicResource ButtonSecondary}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
        </Style>

        <Style Selector="Button.theme:pointerover">
            <Setter Property="Background" Value="{DynamicResource ButtonSecondaryHover}"/>
        </Style>

        <Style Selector="TextBox">
            <Setter Property="Background" Value="{DynamicResource SurfaceBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="FontFamily" Value="monospace,Monaco,"/>
        </Style>

        <Style Selector="TextBox:focus">
            <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
        </Style>

        <Style Selector="TextBlock.title">
            <Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
        </Style>

        <Style Selector="TextBlock.subtitle">
            <Setter Property="Foreground" Value="{DynamicResource TextSecondary}"/>
        </Style>

        <Style Selector="TextBlock.label">
            <Setter Property="Foreground" Value="{DynamicResource TextSecondary}"/>
        </Style>

        <Style Selector="TextBlock.result">
            <Setter Property="Foreground" Value="{DynamicResource SuccessColor}"/>
        </Style>

        <Style Selector="TextBlock.error">
            <Setter Property="Foreground" Value="{DynamicResource ErrorColor}"/>
        </Style>

        <Style Selector="Border.surface">
            <Setter Property="Background" Value="{DynamicResource SurfaceBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        </Style>

        <Style Selector="Border.errorBorder">
            <Setter Property="Background" Value="{DynamicResource ErrorBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ErrorColor}"/>
        </Style>

    </Window.Styles>

    <DockPanel>
        <!-- menu bar -->
        <Menu DockPanel.Dock="Top">
        
            <MenuItem Header="View">
                <MenuItem x:Name="themeMenuItem" Header="Toggle Theme (Light / Dark)" />
            </MenuItem>

            <MenuItem Header="Help">
                <MenuItem x:Name="helpMenuItem" Header="About Syntax" />
            </MenuItem>

        </Menu>

        <Grid Margin="30" RowDefinitions="Auto,Auto,Auto,*,Auto">
        
        <!-- title sectioin -->
        <StackPanel Grid.Row="0" Margin="0,0,0,20">
            <TextBlock Text="Maths Expression Evaluator" 
                       FontSize="28" 
                       FontWeight="Bold" 
                       Classes="title"
                       HorizontalAlignment="Center"/>
            <TextBlock Text="Enter an expression and click Evaluate" 
                       FontSize="14" 
                       Classes="subtitle"
                       HorizontalAlignment="Center"
                       Margin="0,8,0,0"/>
        </StackPanel>

        <!-- input section -->
        <Border Grid.Row="1" 
                Classes="surface"
                BorderThickness="1" 
                CornerRadius="8" 
                Padding="20"
                Margin="0,0,0,15">
            <StackPanel>
                <TextBlock Text="Expression:" 
                           FontSize="14" 
                           Classes="label"
                           Margin="0,0,0,8"
                           FontWeight="SemiBold"/>
                <TextBox x:Name="inputBox"
                         Height="45"
                         FontSize="18"
                         Watermark="e.g., (2 + 1) * 5 - 4 / 2" />
            </StackPanel>
        </Border>

        <!-- buttons section -->
        <StackPanel Grid.Row="2" 
                    Orientation="Horizontal" 
                    HorizontalAlignment="Center"
                    Margin="0,0,0,15">
            <Button x:Name="evaluateButton" 
                    Content="Evaluate" 
                    Width="140" 
                    Height="40" 
                    FontSize="15"
                    Margin="0,0,10,0" />
            <Button x:Name="clearButton" 
                    Content="Clear" 
                    Width="120" 
                    Height="40" 
                    FontSize="15"
                    Classes="clear" />
        </StackPanel>

        <!-- output section -->
        <Border Grid.Row="3" 
                Classes="surface"
                BorderThickness="1" 
                CornerRadius="8" 
                Padding="20">
            <StackPanel>
                <TextBlock Text="Result:" 
                           FontSize="14" 
                           Classes="label"
                           Margin="0,0,0,8"
                           FontWeight="SemiBold"/>
                <ScrollViewer VerticalScrollBarVisibility="Auto" Height="300">
                    <TextBox x:Name="outputBox"
                             IsReadOnly="True"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"
                             Text="Results here..."
                             FontSize="24"
                             FontWeight="Bold"
                             Background="Transparent"
                             BorderThickness="0"
                             Classes="result"
                             Focusable="False"
                             IsHitTestVisible="False" />
                </ScrollViewer>
            </StackPanel>
        </Border>

        <!-- error Section -->
        <Border Grid.Row="4" 
                Margin="0,15,0,0"
                Padding="15"
                Classes="errorBorder"
                BorderThickness="0"
                CornerRadius="6"
                IsVisible="{Binding #errorBox.Text, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Error:" FontSize="16" Margin="0,0,10,0" VerticalAlignment="Center" Classes="error" FontWeight="SemiBold"/>
                <TextBlock x:Name="errorBox"
                           FontSize="14"
                           Classes="error"
                           TextWrapping="Wrap"
                           VerticalAlignment="Center" />
            </StackPanel>
        </Border>

    </Grid>
    </DockPanel>
</Window>